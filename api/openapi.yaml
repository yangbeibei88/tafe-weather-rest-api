openapi: "3.1.0"
info:
  title: TAFE Weather API
  version: "1.0.0"
  description: "RESTful API to read, write, update and delete weather data."
tags:
  - name: weathers
    description: weather readings
  - name: users
    description: users information
  - name: logs
    description: deleted weather readings
paths:
  /api/v1/weathers/:
    get:
      tags:
        - weathers
      summary: List weather reading for all stations
      security:
        - bearerAuth: []
      operationId: listAllWeathers
      parameters:
        - name: limit
          in: query
          description: The maximum of results to return per page.
          schema:
            type: integer
            default: 10
            maximum: 50
        - name: page
          in: query
          description: The page number of results
          schema:
            type: integer
            default: 1
      responses:
        "200":
          description: A list of weather readings
          content:
            application/json:
              schema:
                type: object
                required:
                  - paging
                  - result
                properties:
                  paging:
                    type: object
                    properties:
                      totalCount:
                        type: integer
                        description: Total count of returned items
                      totalPages:
                        type: integer
                        description: Total pages of returned items
                      limit:
                        type: integer
                      currentPage:
                        type: integer
                  result:
                    type: array
                    items:
                      $ref: "#/components/schemas/Weather"
    post:
      tags:
        - weathers
      summary: Create a new weather reading
      security:
        - bearerAuth: []
      operationId: Create a new weather reading
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/WeatherRequest"
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WeatherResponse"
  /api/v1/weathers/{id}:
    get:
      tags:
        - weathers
      summary: Show a specific weather reading
      security:
        - bearerAuth: []
      operationId: showWeatherById
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the weather reading to retrive
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WeatherResponse"
    put:
      tags:
        - weathers
      summary: Update a specific weather reading
      security:
        - bearerAuth: []
      operationId: updateWeatherById
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the weather reading to retrive
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/WeatherRequest"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WeatherResponse"
    delete:
      tags:
        - weathers
      summary: Delete a weather reading by Id
      security:
        - bearerAuth: []
      operationId: deleteWeatherById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
components:
  schemas:
    UniqueId:
      type: string
      readOnly: true
      description: Unique identifer for each document in a collection
    Weather:
      type: object
      required:
        - deviceName
        - precipitation
        - temperature
        - atmosphericPressure
        - maxWindSpeed
        - solarRadiation
        - vaporPressure
        - humidity
        - windDirection
      properties:
        _id:
          $ref: "#/components/schemas/UniqueId"
        deviceName:
          type: string
          minLength: 1
          maxLength: 50
          description: "Must be a string and is required, 1-50 characters"
        precipitation:
          type: number
          format: double
          description: "Must be a number, unit: mm/h"
        temperature:
          type: number
          format: double
          description: "Must be a number, unit: celsius degree"
        atmosphericPressure:
          type: number
          format: double
          description: "Must be a number, unit: kpa"
        maxWindSpeed:
          type: number
          format: double
          description: "Must be a number, unit: m/s"
        solarRadiation:
          type: number
          format: double
          description: "Must be a number, unit: w/m2"
        vaporPressure:
          type: number
          format: double
          description: "Must be a number, unit: kpa"
        humidity:
          type: number
          format: double
          description: "Must be a number, unit: %"
        windDirection:
          type: number
          format: double
          description: "Must be a number, unit: degree"
        createdAt:
          type: string
          format: date-time
          readOnly: true
          description: "The current timestamp when the document is created"
        createdBy:
          type: string
          readOnly: true
          description: "User ID refer to who created the document"
        lastModifiedAt:
          type: string
          format: date-time
          readOnly: true
          description: "The current timestamp when the document is updated"
        lastModifiedBy:
          type: string
          readOnly: true
          description: "User ID refer to who last modified the document"
    WeatherResponse:
      allOf:
        - $ref: "#/components/schemas/Weather"
        - type: object
          properties:
            geoLocation:
              $ref: "#/components/schemas/GeoLocationOutput"
    WeatherRequest:
      allOf:
        - $ref: "#/components/schemas/Weather"
        - type: object
          properties:
            longitude:
              $ref: "#/components/schemas/LongitudeInput"
            latitude:
              $ref: "#/components/schemas/LatitudeInput"
    GeoLocationOutput:
      type: object
      required:
        - type
        - coordinates
      properties:
        type:
          enum:
            - Point
          type: string
        coordinates:
          type: array
          minItems: 2
          maxItems: 2
          prefixItems:
            - $ref: "#/components/schemas/LongitudeInput"
            - $ref: "#/components/schemas/LatitudeInput"
    LongitudeInput:
      type: number
      format: double
      minimum: -180
      maximum: 180
      description: Longitude must be between -180 and 180 degrees
    LatitudeInput:
      type: number
      format: double
      minimum: -90
      maximum: 90
      description: Latitude must be between -90 and 90 degrees
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: jwt
